shiny::runApp()
install.packages("gridlayout")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source("helper.R")
library(shiny)
library(gridlayout)
install.packages("gridlayout")
install.packages("shinyuieditor")
install.packages("updateR")
library(installr)
install.packages("installr")
installr::updateR(copy_packages = TRUE)
library(gridlayout)
library(shiny)
# library(gridlayout)
library(tidyverse)
library(lubridate)
library(scales)
install.packages("remotes")
library(remotes)
remotes::install_github("rstudio/shinyuieditor")
runApp()
library(flexdashboard)
install.packages("flexdashboard")
install.package("shinydashboard")
library(shinydashboard)
shinyuieditor::launch_editor()
shinyuieditor::launch_editor(app_loc = "Home/home_afford_app")
shinyuieditor::launch_editor(app_loc = "Home/home_afford_app/app.R")
shinyuieditor::launch_editor(app_loc = "app.R")
setwd("C/Users/Zachary Palmore/GitHub/Home/home_afford_app")
setwd("C/Users/Zachary Palmore/GitHub/Home")
setwd("C:/Users/Zachary Palmore/GitHub/Home/home_afford_app")
runApp()
shinyuieditor::launch_editor(app_loc = "app.R")
shinyuieditor::launch_editor()
shinyuieditor::launch_editor(app_loc = "C:/Users/Zachary Palmore/GitHub/Home/home_afford_app")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dateRangeInput()
runApp()
gc()
library(shinythemes)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
library(shinydashboard)
## Only run this example in interactive R sessions
if (interactive()) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Dynamic boxes"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(width = 2, actionButton("count", "Count")),
infoBoxOutput("ibox"),
valueBoxOutput("vbox")
)
)
)
server <- function(input, output) {
output$ibox <- renderInfoBox({
infoBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
output$vbox <- renderValueBox({
valueBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
}
shinyApp(ui, server)
}
server <- function(input, output) {
output$ibox <- renderInfoBox({
infoBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
output$vbox <- renderValueBox({
valueBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
}
## Only run this example in interactive R sessions
if (interactive()) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Dynamic boxes"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(width = 2, actionButton("count", "Count")),
infoBoxOutput("ibox"),
valueBoxOutput("vbox")
)
)
)
server <- function(input, output) {
output$ibox <- renderInfoBox({
infoBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
output$vbox <- renderValueBox({
valueBox(
"Title",
input$count,
icon = icon("credit-card")
)
})
}
shinyApp(ui, server)
}
